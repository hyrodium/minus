language: cpp

# $PROJ_BUILD_DIR must not be co-located with the source directory!
# env:
# global:  # this is useful for future caching, see VXL/.travis.yml
#     - PROJ_SOURCE_DIR=${TRAVIS_BUILD_DIR} # ${HOME}/build/<USER>/<REPO>
#     - PROJ_BUILD_DIR=${HOME}/proj/build
#     - PROJ_INSTALL_DIR=${HOME}/proj/install

env:  # https://docs.travis-ci.com/user/customizing-the-build#Rows-that-are-Allowed-to-Fail
matrix:
  include:
    #    - os: linux
    #      addons:
    #        apt:
    #          sources:
    #            - ubuntu-toolchain-r-test
    #          packages:
    #            - g++-5
    #      env:
    #         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    #         - MATRIX_NAME="gcc-5"
    #           
    #    - os: linux
    #      addons:
    #        apt:
    #          sources:
    #            - ubuntu-toolchain-r-test
    #          packages:
    #            - g++-6
    #      env:
    #         - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    #         - MATRIX_NAME="gcc-6"
    #
    #    - os: linux
    #      compiler: clang
    #      env:
    #        - MATRIX_NAME="clang_default"

    # works on macOS 10.14       
    - os: osx
      osx_image: xcode10.2
      env:
      - MATRIX_NAME="clang_xcode10"
      
    - os: osx
      osx_image: xcode11
      env:
      - MATRIX_NAME="clang_xcode11"
      
    - os: osx
      osx_image: xcode10.2
      addons:
        homebrew:
          packages:
          - gcc@5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - MATRIX_NAME="gcc-5_xcode10.2"
      
    # There is a specific bug with Xcode11 
    # when including cstdlib, due to gcc including a clang header
    # that misses a clang definition just introduced by apple
    # https://github.com/Homebrew/homebrew-core/issues/40676
    - os: osx
      osx_image: xcode11
      addons:
        homebrew:
          packages:
          - gcc@5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - MATRIX_NAME="gcc-5_xcode11"
  allow_failures:
    - os: osx
      osx_image: xcode11
      addons:
        homebrew:
          packages:
          - gcc@5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - MATRIX_NAME="gcc-5_xcode11"
          

       
# addons:
#   apt:
#     sources:
#       - ubuntu-toolchain-r-test
#     packages:
#       - cmake

          
before_install:
    - eval "${MATRIX_EVAL}"
      
# jobs:
# include:
#   - os: linux
#     dist: trusty
#   - os: linux
#     dist: xenial
#   - os: osx
#     osx_image: xcode11


# additional setup
# install:

  # install specific cmake version (minimum vxl requirement)
#   - |
#     if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
#       CMAKE_URL="http://www.cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz"
#       mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
#       export PATH=${DEPS_DIR}/cmake/bin:${PATH}
#     fi    

# before_script:
  # create build & install directories if they do not exist
#   - mkdir -p ${PROJ_BUILD_DIR} ${PROJ_INSTALL_DIR}
  
# main script
script:
  - cmake --version
  - ${CC} --version
  - cmake .
  - make
  - ./bin/minus-chicago -g 1>/dev/null     # test
#   - make install
